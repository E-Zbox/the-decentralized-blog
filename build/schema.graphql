type Followed @entity(immutable: true) {
  id: Bytes!
  follower: Bytes! # address
  followed: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unfollowed @entity(immutable: true) {
  id: Bytes!
  follower: Bytes! # address
  unfollowed: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type PostCreated @entity(immutable: true) {
  id: Bytes!
  Post_id: BigInt! # uint256
  author: Bytes! # address
  content: String! # string
  title: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostDeleted @entity(immutable: true) {
  id: Bytes!
  Post_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PostEdited @entity(immutable: true) {
  id: Bytes!
  Post_id: BigInt! # uint256
  content: String! # string
  title: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type UserRegistered @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  name: String! # string
  email: String! # string
  profilePicture: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserUpdated @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  name: String! # string
  email: String! # string
  profilePicture: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
